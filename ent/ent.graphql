directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateJudgeInput is used for create Judge object.
Input was generated by ent.
"""
input CreateJudgeInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  code: String!
  type: JudgeType
  configuration: String!
  problemIDs: [ID!]
}
"""
CreateProblemInput is used for create Problem object.
Input was generated by ent.
"""
input CreateProblemInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  code: String!
  submissionIDs: [ID!]
  judgeID: ID!
}
"""
CreateSubmissionInput is used for create Submission object.
Input was generated by ent.
"""
input CreateSubmissionInput {
  createdAt: Time
  updatedAt: Time
  status: SubmissionStatus
  verdict: SubmissionVerdict
  testCount: Int
  problemID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Judge implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  code: String!
  type: JudgeType!
  configuration: String!
  problems: [Problem!]
}
"""
JudgeType is enum for the field type
"""
enum JudgeType @goModel(model: "github.com/syoi-org/judy/ent/judge.Type") {
  local
  codeforces
  vjudge
  syoj
  noop
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/syoi-org/judy/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Problem implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  code: String!
  submissions: [Submission!]
  judge: Judge!
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  judges: [Judge!]!
  problems: [Problem!]!
  submissions: [Submission!]!
}
type Submission implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  status: SubmissionStatus!
  verdict: SubmissionVerdict!
  testCount: Int!
  problem: Problem!
}
"""
SubmissionStatus is enum for the field status
"""
enum SubmissionStatus @goModel(model: "github.com/syoi-org/judy/ent/submission.Status") {
  pending
  compiling
  judging
  finished
}
"""
SubmissionVerdict is enum for the field verdict
"""
enum SubmissionVerdict @goModel(model: "github.com/syoi-org/judy/ent/submission.Verdict") {
  OK
  TLE
  MLE
  ILE
  WA
  CE
  RE
  PE
  CRASHED
  OTHER
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateJudgeInput is used for update Judge object.
Input was generated by ent.
"""
input UpdateJudgeInput {
  createdAt: Time
  updatedAt: Time
  name: String
  code: String
  type: JudgeType
  configuration: String
  addProblemIDs: [ID!]
  removeProblemIDs: [ID!]
  clearProblems: Boolean
}
"""
UpdateProblemInput is used for update Problem object.
Input was generated by ent.
"""
input UpdateProblemInput {
  createdAt: Time
  updatedAt: Time
  name: String
  code: String
  addSubmissionIDs: [ID!]
  removeSubmissionIDs: [ID!]
  clearSubmissions: Boolean
  judgeID: ID
}
"""
UpdateSubmissionInput is used for update Submission object.
Input was generated by ent.
"""
input UpdateSubmissionInput {
  createdAt: Time
  updatedAt: Time
  status: SubmissionStatus
  verdict: SubmissionVerdict
  testCount: Int
  problemID: ID
}
