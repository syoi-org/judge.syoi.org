package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/syoi-org/judy/ent"
	"github.com/syoi-org/judy/ent/graph/generated"
)

// CreateJudge is the resolver for the createJudge field.
func (r *mutationResolver) CreateJudge(ctx context.Context, input ent.CreateJudgeInput) (*ent.Judge, error) {
	return r.client.Judge.Create().SetInput(input).Save(ctx)
}

// UpdateJudge is the resolver for the updateJudge field.
func (r *mutationResolver) UpdateJudge(ctx context.Context, id int, input ent.UpdateJudgeInput) (*ent.Judge, error) {
	return r.client.Judge.UpdateOneID(id).SetInput(input).Save(ctx)
}

// CreateProblem is the resolver for the createProblem field.
func (r *mutationResolver) CreateProblem(ctx context.Context, input ent.CreateProblemInput) (*ent.Problem, error) {
	return r.client.Problem.Create().SetInput(input).Save(ctx)
}

// UpdateProblem is the resolver for the updateProblem field.
func (r *mutationResolver) UpdateProblem(ctx context.Context, id int, input ent.UpdateProblemInput) (*ent.Problem, error) {
	return r.client.Problem.UpdateOneID(id).SetInput(input).Save(ctx)
}

// CreateSubmission is the resolver for the createSubmission field.
func (r *mutationResolver) CreateSubmission(ctx context.Context, input ent.CreateSubmissionInput) (*ent.Submission, error) {
	return r.client.Submission.Create().SetInput(input).Save(ctx)
}

// UpdateSubmission is the resolver for the updateSubmission field.
func (r *mutationResolver) UpdateSubmission(ctx context.Context, id int, input ent.UpdateSubmissionInput) (*ent.Submission, error) {
	return r.client.Submission.UpdateOneID(id).SetInput(input).Save(ctx)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
