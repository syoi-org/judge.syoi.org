// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (j *Judge) Problems(ctx context.Context) (result []*Problem, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = j.NamedProblems(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = j.Edges.ProblemsOrErr()
	}
	if IsNotLoaded(err) {
		result, err = j.QueryProblems().All(ctx)
	}
	return result, err
}

func (pr *Problem) Submissions(ctx context.Context) (result []*Submission, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = pr.NamedSubmissions(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = pr.Edges.SubmissionsOrErr()
	}
	if IsNotLoaded(err) {
		result, err = pr.QuerySubmissions().All(ctx)
	}
	return result, err
}

func (pr *Problem) Judge(ctx context.Context) (*Judge, error) {
	result, err := pr.Edges.JudgeOrErr()
	if IsNotLoaded(err) {
		result, err = pr.QueryJudge().Only(ctx)
	}
	return result, err
}

func (s *Submission) Problem(ctx context.Context) (*Problem, error) {
	result, err := s.Edges.ProblemOrErr()
	if IsNotLoaded(err) {
		result, err = s.QueryProblem().Only(ctx)
	}
	return result, err
}
